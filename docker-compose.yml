version: '2.3'

x-volumes:
  &default-volumes # Define all volumes you would like to have real-time mounted into the docker containers
  volumes:
    - ./packages/drupal:/app/web/modules/custom:delegated
    - ./apps/cms:/app:delegated

x-environment: &default-environment
  LAGOON_PROJECT: &lagoon-project ${COMPOSE_PROJECT_NAME:-slbtemplate}
  # Route that should be used locally, if you are using pygmy, this route *must* end with .docker.amazee.io
  LAGOON_ROUTE: &default-url http://${COMPOSE_PROJECT_NAME:-slbtemplate}.docker.amazee.io
  # Uncomment if you like to have the system behave like in production
  #LAGOON_ENVIRONMENT_TYPE: production
  # See example.docker-compose.override.yml for XDEBUG_ENABLE option

x-user:
  &default-user # The default user under which the containers should run. Change this if you are on linux and run with another user than id `1000`
  user: '1000'

services:
  cli: # cli container, will be used for executing composer and any local commands (drush, drupal, etc.)
    build:
      context: .
      target: cli
      dockerfile: .lagoon/Dockerfile
    image: &cli-image ${COMPOSE_PROJECT_NAME:-slbtemplate}-cli # this image will be reused as `CLI_IMAGE` in subsequent Docker builds
    labels:
      # Lagoon Labels
      lagoon.type: cli-persistent
      lagoon.persistent.name: nginx # mount the persistent storage of nginx into this container
      lagoon.persistent: /app/web/sites/default/files/ # location where the persistent storage should be mounted
      lando.type: php-cli-drupal
    <<: *default-volumes # loads the defined volumes from the top
    user: root
    volumes_from: ### mount the ssh-agent from the pygmy or cachalot ssh-agent. Automatically removed in CI.
      - container:amazeeio-ssh-agent ### Local overrides to mount host SSH keys. Automatically removed in CI.
    environment:
      <<: *default-environment # loads the defined environment variables from the top

  nginx:
    build:
      context: .
      target: nginx
      dockerfile: .lagoon/Dockerfile
      args:
        CLI_IMAGE: *cli-image
    labels:
      lagoon.type: nginx-php-persistent
      lagoon.persistent: /app/web/sites/default/files/
      lando.type: nginx-drupal
    <<:
      - *default-volumes
      - *default-user # uses the defined user from top
    depends_on:
      - cli # basically just tells docker-compose to build the cli first
    environment:
      <<: *default-environment # loads the defined environment variables from the top
    networks:
      - amazeeio-network
      - default

  php:
    build:
      context: .
      target: php
      dockerfile: .lagoon/Dockerfile
      args:
        CLI_IMAGE: *cli-image
    labels:
      lagoon.type: nginx-php-persistent
      lagoon.name: nginx
      lagoon.persistent: /app/web/sites/default/files/ # define where the persistent storage should be mounted too
      lando.type: php-fpm
    <<:
      - *default-volumes # loads the defined volumes from the top
      - *default-user # uses the defined user from top
    depends_on:
      - cli
    environment:
      <<: *default-environment

  mariadb:
    image: uselagoon/mariadb-drupal
    labels:
      lagoon.type: mariadb
    ports:
      - '3306'
    <<: *default-user # uses the defined user from top
    environment:
      <<: *default-environment

  build:
    build:
      context: .
      target: publisher
      dockerfile: .lagoon/Dockerfile
    environment:
      <<: *default-environment
      LAGOON_LOCALDEV_URL: build-${COMPOSE_PROJECT_NAME:-slbtemplate}.docker.amazee.io
    networks:
      - amazeeio-network
      - default
    labels:
      lagoon.type: node-persistent
      lagoon.persistent: /app/persisted-store
      lagoon.name: build

  preview:
    build:
      context: .
      target: preview
      dockerfile: .lagoon/Dockerfile
    environment:
      <<: *default-environment
      LAGOON_LOCALDEV_URL: preview-${COMPOSE_PROJECT_NAME:-slbtemplate}.docker.amazee.io
    networks:
      - amazeeio-network
      - default
    labels:
      lagoon.type: node
      lagoon.name: preview

  convertmd:
    build:
      context: .
      target: convertmd
      dockerfile: .lagoon/Dockerfile
    environment:
      <<: *default-environment
      LAGOON_LOCALDEV_URL: convertmd-${COMPOSE_PROJECT_NAME:-slbtemplate}.docker.amazee.io
    networks:
      - amazeeio-network
      - default
    labels:
      lagoon.type: node-persistent
      lagoon.persistent.name: nginx # mount the persistent storage of nginx into this container
      lagoon.persistent: /app/web/sites/default/files/

networks:
  amazeeio-network:
    external: true
