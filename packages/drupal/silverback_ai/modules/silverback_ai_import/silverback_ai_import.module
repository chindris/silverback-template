<?php

/**
 * @file
 * Primary module hooks for silverback_ai_import module.
 */

use Drupal\Core\Form\FormStateInterface;

/**
 * {@inheritdoc}
 */
function silverback_ai_import_form_alter(&$form, &$form_state, $form_id) {

  if ($form_id == 'views_exposed_form') {
    $file = \Drupal::entityTypeManager()->getStorage('file')->load(123);
    // $entity = Node::load(96);
    // $block_parser = new BlockParser();
    // $blocks = $block_parser->parse($entity->body->value);
    $service = \Drupal::service('silverback_ai_import.content');
    // $service->import($file, $entity);
    $ast = $service->getAstFromFilePath($file);
    // Header example.
    $chunk = reset($ast->content);
    $chunk = json_decode(json_encode($chunk), TRUE);

    $manager = \Drupal::service('plugin.manager.ai.import');
    $definitions = $manager->getDefinitions();
    foreach ($definitions as $definition) {
      $plugin = $manager->createInstance($definition['id']);
      // dpm($plugin->matches($chunk));
    }
    // $plugin = $manager->createInstance('ai_header', ['level' => 2]);
    $plugin = $manager->createInstance('ai_header');
    // dpm($plugin->convert($chunk));
  }

}

/**
 * {@inheritdoc}
 */
function silverback_ai_import_form_node_page_split_form_alter(&$form, FormStateInterface $form_state, $form_id) {
  $form['import'] = [
    '#type' => 'details',
    '#title' => t('Import content'),
    '#open' => TRUE,
    '#weight' => 99,
  ];
  $form['import']['import_options'] = [
    '#type' => 'radios',
    '#title' => t('Import content from:'),
    '#options' => [
      'none' => t('Do not import any content'),
      'docx' => t('Microsoft Word file'),
      // 'pdf' => t("PDF file"),
      // 'html' => t("Remote HTML page"),
    ],
    '#default_value' => 'none',
  ];

  $form['import']['container_docx'] = [
    '#type' => 'container',
    '#states' => [
      'visible' => [
        'input[name="import_options"]' => ['value' => 'docx'],
      ],
    ],
  ];

  $form['import']['container_docx']['file'] = [
    '#type' => 'managed_file',
    '#title' => t('Select a Microsoft Word file'),
    '#description' => t('Select a Microsoft Word document to import content from.'),
    '#multiple' => FALSE,
    '#attributes' => [
      'class' => ['file--import'],
    ],
    '#upload_validators' => [
      'file_validate_extensions' => ['doc docx DOC DOCX'],
    ],
  ];

  $form['actions']['submit']['#submit'][] = '_silverback_ai_import_form_submit';

  // Better to have this unpublished originally, and then
  // we will display a message to the user (esp. if there is AI content)
  $form['moderation_state']['#access'] = FALSE;
  $form['actions']['submit']['#value'] = t('Create');

}

/**
 * {@inheritdoc}
 */
function _silverback_ai_import_form_submit(array $form, FormStateInterface $form_state) {
  $entity = $form_state->getFormObject()->getEntity();
  $fid = reset($form_state->getValue('file'));
  if ($fid) {
    $file = \Drupal::entityTypeManager()->getStorage('file')->load($fid);
    $service = \Drupal::service('silverback_ai_import.content');
    $ast = $service->getAstFromFilePath($file);
    \Drupal::service('silverback_ai_import.batch.import')->create($ast->content, $entity);
  }
}
